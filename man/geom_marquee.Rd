% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_marquee.R
\name{geom_marquee}
\alias{geom_marquee}
\title{Draw text formatted with marquee}
\usage{
geom_marquee(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = "identity",
  ...,
  size.unit = "mm",
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}}. If specified and
\code{inherit.aes = TRUE} (the default), it is combined with the default mapping
at the top level of the plot. You must supply \code{mapping} if there is no plot
mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{stat}{The statistical transformation to use on the data for this
layer, either as a \code{ggproto} \code{Geom} subclass or as a string naming the
stat stripped of the \code{stat_} prefix (e.g. \code{"count"} rather than
\code{"stat_count"})}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function. Cannot be jointly specified with
\code{nudge_x} or \code{nudge_y}.}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{layer()}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{colour = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}

\item{size.unit}{How the \code{size} aesthetic is interpreted: as millimetres
(\code{"mm"}, default), points (\code{"pt"}), centimetres (\code{"cm"}), inches (\code{"in"}),
or picas (\code{"pc"}).}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}
}
\description{
The geom is an extension of \code{geom_text()} and \code{geom_label()} that allows you
to draw richly formatted text in marquee-markdown format in your plot. For
plain text it is a near-drop-in replacement for the above geoms except some
sizing might be very slightly different. However, using this geom you are
able to access the much more powerful font settings available in marquee, so
even then it might make sense to opt for this geom.
}
\details{
Styling of the text is based on a style set with the exception that the
standard aesthetics such as family, size, colour, fill, etc. are recognized
and applied to the base tag style. The default style set (\link{classic_style})
can be changed using the style aesthetic which can take a vector of style
sets so that each text can rely on it's own style if needed. As with
\code{\link[=element_marquee]{element_marquee()}}, the \code{fill} aesthetic is treated differently and not
applied to the base tag, but to the body tag as a \code{\link[=skip_inherit]{skip_inherit()}} style so
as to not propagate the fill.

Contrary to the standard text and label geoms, \code{geom_marquee()} takes a
\code{width} aesthetic that can be used to turn on soft wrapping of text. The
default value (\code{NA}) lets the text run as long as it want's (honoring hard
breaks), but setting this to something else will instruct marquee to use at
most that amount of space. You can use grid units to set it to an absolute
amount.
}
\examples{
\dontshow{if (utils::packageVersion("base") > "4.3" && rlang::is_installed("ggplot2")) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}

library(ggplot2)
# Standard use
p <- ggplot(mtcars, aes(wt, mpg))
p + geom_marquee(aes(label = rownames(mtcars)))

# Make use of more powerful font features (note, result may depend on fonts
# installed on the system)
p + geom_marquee(
  aes(label = rownames(mtcars)),
  style = classic_style(weight = "thin", width = "condensed")
)

# Turn on line wrapping
p + geom_marquee(aes(label = rownames(mtcars)), width = unit(2, "cm"))

# Style like label
label_style <- modify_style(
  classic_style(),
  "body",
  padding = skip_inherit(trbl(4)),
  border = "black",
  border_size = skip_inherit(trbl(1)),
  border_radius = 3
)
p + geom_marquee(aes(label = rownames(mtcars), fill = gear), style = label_style)

# Use markdown to style the text
red_bold_names <- sub("(\\\\w+)", "{.red **\\\\1**}", rownames(mtcars))
p + geom_marquee(aes(label = red_bold_names))
\dontshow{\}) # examplesIf}
}
